=================================23-03-17================================
1.객체 => iv(인스턴스변수) 묶음
 1. iv(인스턴스) => 객체를 생성해야 사용가능
 2. lv(static) => 객체를 생성 안해도 사용가능 => EX => 클래스명.메서드명(값,값)


2. lv(인스턴스변수) lv(클래스변수(static)를 언제 붙여야할까?
 1. iv(인스턴스변수) => 개별속성 => ex)포커카드 = 숫자 무늬 or 라면스프,면종류
 2. lv(클래스변수) => 공통속성 => ex)포커카드 = 폭 높이 or 라면봉지
 3. 인스터스 멤버(iv,im)을 사용하지 않는 메서드에 static을 붙인다

3. 메서드간의 호출과 참조
 1.  인스턴스메소드에서는 인스턴스(메소드 or 변수) 클래스변수(static => 메소드 or 변수 ) 사용가능
 2. 클래스메소드(static)에서는 클래스 변수는 사용가능하나 인스턴스변수 사용 불가능 (객체생성후 사용가능)

4. 오버로딩  => 한 클래스 안에 같은 이름의 메서드 여러 개 정의가능
4-1 오버로딩이 성립하기 위한 조건
   1. 메서드 이름이 같아야 한다
   2. 매개변수의 개수 또는 타입이 달라야 한다
   3. 반환 타입은 영향없다

5. 생성자  => iv초기화 메서드
 1. 인스턴스가 생성될 때마다 호출되는 '인스턴스 초기화 메서드'
  2. 인스턴스 생성시 수행할 작업(iv 초기화)에 사용

5-1 생성자 사용
 1. 이름이 클래스 이름과 같아야 한다
 2. 리턴값이 없다.(void 안붙임)
 3. 모든 클래스는 반드시 생성자를 가져야 한다

5-2 기본 생성자 
 1. 매개변수가 없는 생성자
 2. 생성자가 하나도 없을 때만, 컴파일러가 자동 추가
 
6. 생성자 this(),this(매개변수)
 1. 생성자에서 다른 생성자 호출할 때 사용
 2. 다른 생성자 호출시 첫 줄에서만 사용가능
 3. 기본 생성자가 매개변수를 지정하지 않으면 default값이다

6-1 참조변수 this
 1. 인스턴스 자신을 가리키는 참조변수
 2. 인스턴스의 주소가 저장되어 있다.
3. 모든 인스턴스 메서드에 지역변수로 숨겨진 채로 존재
 4. 인스턴스 메서드(생성자 포함)에서 사용
 5. 지역변수(lv)와 인스턴스 변수(iv)를 구별할 때 사용

6-2 참조변수 this와 생성자 this()
 1. 인스턴스 변수는 this가 생략 (EX ) long a,b => this.a , this.b)
 2. 참조변수 this는 생성자와 인스턴스 메소드에서만 사용가능 (클래스메소드는 불가능)

7. 변수의 초기화 
 1. 지역변수(lv)는 수동초기화 (우리가 직접) 해야함 (사용전에 꼭 하기!!)
 2. 멤버변수(iv,cv)는 각 타입의 기본값으로 자동 초기화 
<이거 보면 할일 => 생성자 메소드 이해 안됐으니 한번 더 정독>

7-1 멤버변수의 초기화
 1. 명시적 초기화(=) => ex) int door = 4 (기본형), Engine e = new Engine();(참조형 변수 초기화)
 2. 초기화 블럭  =>  복잡한 초기화 여러문장 넣기
   . 클래스변수 초기화 블럭 : static {}
	. 클래스 변수 초기화 시점 => 클래스가 처음 메모리에 올라갈때 단 한번
	Ex) static int[] arr = new int[10]; // 명시적 초기화
		static{ 클래스 초기화 블럭 }

  . 인스턴스변수 초기화 블럭 : 생성자(iv초기화)
	. 인스턴스 변수 초기화 시점 : 인스턴스가 생성될 때 마다 
		=> 	1. CV => iv 순서
		=>	2.초기화 순서 : 자동(기본값) => 간단(=) => 복잡(static,생성자{})
	EX) 	=========간단============
		static int cv = 1; => 클래스변수의 명시적 초기화
		int iv = 1; => 인스턴스변수의 명시적 초기화

	 	static {  	cv = 2    => 클래스 초기화 블럭
				iv = 2; } => static을 이용한 인스턴스변수 초기화
		
		InitTest(){iv = 3 } => 생성자 초기화
	  
 